{
    "Subj_Name":"Data Structure & Algorithms",
    "Quiz_Details":"The Quiz is all about the Abstract Data type (ADT) ",
    "Quiz_No":"Quiz 1",
    "Quiz_Questions":[
        {   
            "question":" is a type (or class) for objects whose behavior is defined by a set of value and a set of operations.",
            "answer":["Abstract Data type","Abstract Data type(ADT)","ADT"]
        },{
            "question":"The process of providing only the essentials and hiding the details is known ______",
            "answer":["abstraction"]
        },
        {   
            "question":"A ___ contains elements of same type arranged in sequential order and following operations can be performed on the list.",
            "answer":["List","list ADT"]
        },
        {   
            "question":"A ___ contains elements of same type arranged in sequential order. All operations takes place at a single end that is top of the stack",
            "answer":["Stack","Stack ADT"]
        },
        {   
            "question":"A _____ contains elements of same type arranged in sequential order. Operations takes place at both ends, insertion is done at end and deletion is done at front",
            "answer":["Queue","Queue ADT"]
        },{
            "question":"This operation of LIST ADT Return an element from the list at any given position.",
            "answer":["get()","get"]
        },{
            "question":"This operation of LIST ADT Insert an element at any position of the list.",
            "answer":["insert()","insert"]
        },{
            "question":"This operation of LIST ADT Remove the first occurrence of any element from a non-empty list.",
            "answer":["remove()","remove"]
        },{
            "question":"This operation of LIST ADT Remove the element at a specified location from a non-empty list.",
            "answer":["removeAt()","removeAt"]
        },{
            "question":"This operation of LIST ADT Replace an element at any position by another element.",
            "answer":["replace()","replace"]
        },{
            "question":"This operation of LIST ADT Return the number of elements in the list.",
            "answer":["size()","size"]
        },{
            "question":"This operation of LIST ADT Return true if the list is empty, otherwise return false.",
            "answer":["isEmpty()","isEmpty"]
        },{
            "question":"This operation of LIST ADT Return true if the list is full, otherwise return false.",
            "answer":["isFull()","isFull"]
        },{
            "question":"This operation of STACK ADT Insert an element at one end of the stack called top.",
            "answer":["push()","push"]
        },{
            "question":"This operation of STACK ADT Remove and return the element at the top of the stack, if it is not empty.",
            "answer":["pop()","pop"]
        },{
            "question":"This operation of STACK ADT Return the element at the top of the stack without removing it, if the stack is not empty.",
            "answer":["peek()","peek"]
        },{
            "question":"This operation of QUEUE ADT Insert an element at the end of the queue.",
            "answer":["enqueue()","enqueue"]
        },{
            "question":"This operation of QUEUE ADT Remove and return the first element of queue, if the queue is not empty. ",
            "answer":["dequeue","dequeue"]
        },{
            "question":"This operation of QUEUE ADT Return the element of the queue without removing it, if the queue is not empty.",
            "answer":["peek()","peek"]
        },{
            "question":"Give the 3 ADT in order, separate answer with comma (,)",
            "answer":["List ADT, Stack ADT, Queue ADT","List, Stack, Queue"]
        },{
            "question":"A term used to insert an element into the stack",
            "answer":["push()","push"]
        },{
            "question":"a term used to delete an element from the stack",
            "answer":["pop()","pop"]
        },{
            "question":"In stack, it is a place where all insertion and deletion takes place",
            "answer":["Top"]
        },{
            "question":"In Queue, it is a place where deletion takes effect",
            "answer":["Front"]
        },{
            "question":"In Queue, it is a place where insertion takes effect",
            "answer":["Rear"]
        }
    ]
}